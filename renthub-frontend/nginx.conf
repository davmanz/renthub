worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=media:10m rate=50r/s;

    # Optimizaciones de rendimiento
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Configuraciones de Buffer
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;

    # Configuraciones de seguridad
    server_tokens off;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Configuración de Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

     # ------------------ HTTP --> HTTPS ---------------------
    server {
        listen 80;
        server_name renthub.bytebix.com www.renthub.bytebix.com;
        return 301 https://$host$request_uri;
    }

    # ------------------ HTTPS SERVER -----------------------
    server {
        listen 443 ssl;
         http2 on;
        server_name renthub.bytebix.com www.renthub.bytebix.com;

        ssl_certificate /etc/nginx/ssl/renthub.bytebix.com.fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/renthub.bytebix.com.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;

        root /usr/share/nginx/html;
        index index.html;
        # ===========================================
        # MEDIA FILES - SERVIDOS DIRECTAMENTE POR NGINX
        # ===========================================
        location /media/ {
            # Servir directamente desde el volumen compartido
            alias /app/media/;
            
            # Rate limiting específico para media
            limit_req zone=media burst=20 nodelay;
            
            # Security headers para archivos media
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            
            # CORS para imágenes (si necesitas)
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            
            # Cache agresivo para archivos media
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Logs específicos para media
            access_log /var/log/nginx/media_access.log;
            error_log /var/log/nginx/media_error.log;
            
            # Solo permitir ciertos tipos de archivo
            location ~* \.(jpg|jpeg|png|gif|webp|svg|ico|pdf|mp4|avi|mov)$ {
                # Archivos permitidos
                try_files $uri =404;
            }
            
            # Bloquear acceso a archivos peligrosos
            location ~* \.(php|py|js|env|config|txt|log)$ {
                deny all;
                return 403;
            }
            
            # Protección contra hotlinking
            #valid_referers none blocked localhost *.localhost;
            #if ($invalid_referer) {return 403;}
        }

        # ===========================================
        # API - PROXY A DJANGO
        # ===========================================
        location /api/ {
            # Rate limiting para API
            limit_req zone=api burst=20 nodelay;
            
            # Proxy a la aplicación Django
            proxy_pass http://renthub-backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_redirect off;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # ===========================================
        # REACT SPA - FRONTEND
        # ===========================================
        location / {
            try_files $uri /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            
            # Security headers para el frontend
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Content-Type-Options "nosniff";
        }

        # ===========================================
        # ARCHIVOS ESTÁTICOS DEL FRONTEND
        # ===========================================
        location ~* \.(?:css|js|woff2?|eot|ttf|otf|map)$ {
            expires 1y;
            access_log off;
            add_header Cache-Control "public, no-transform";
            
            # Protección básica
            valid_referers none blocked localhost renthub.bytebix.com *.renthub.bytebix.com;
            if ($invalid_referer) {
                return 403;
            }
        }

        # ===========================================
        # SEGURIDAD
        # ===========================================
        
        # Bloquear acceso a archivos ocultos
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Bloquear acceso a archivos de backup
        location ~* \.(bak|backup|old|orig|tmp)$ {
            deny all;
        }

        # ===========================================
        # MANEJO DE ERRORES
        # ===========================================
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}